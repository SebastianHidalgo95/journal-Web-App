{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routes/AuthRouter.js","routes/PublicRoute.js","routes/PrivateRoute.js","routes/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","console","log","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","noteToFirestore","url","doc","update","RefreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","starUploadingFile","onClick","document","querySelector","click","delete","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","NothingSelected","setError","err","removeError","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","ui","loading","msgError","isFormValid","validator","isEmail","length","setTimeout","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","protoTypes","PropTypes","bool","isRequired","func","PrivateRoute","AppRouter","checking","setChecking","IsLoggedIn","setIsLoggedIn","onAuthStateChanged","initialStatel","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8fcc09aa.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyADkEXPMXWqisohP_4HQOAiaSL43YzxqGM\",\r\n    authDomain: \"react-journal-app-75a3b.firebaseapp.com\",\r\n    projectId: \"react-journal-app-75a3b\",\r\n    storageBucket: \"react-journal-app-75a3b.appspot.com\",\r\n    messagingSenderId: \"853909554293\",\r\n    appId: \"1:853909554293:web:9871109829e276e9af643c\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","\r\n\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/bastian95/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ) {\r\n            \r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n    \r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n    console.log(notes)\r\n    return notes;\r\n\r\n}\r\n","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading', \r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive : '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[notes] Logout'\r\n}","import Swal from 'sweetalert2'\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title:'',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection( `${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch( activeNote ( doc.id, newNote ));\r\n        dispatch( addNewNote( doc.id, newNote ));\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = ( id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ))\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const noteToFirestore = {...note};\r\n        \r\n        if(!note.url){\r\n            delete noteToFirestore.url;  \r\n        }\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore )\r\n        \r\n        dispatch( RefreshNote( note.id, note ))\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const RefreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, note\r\n    }\r\n})\r\n\r\nexport const starUploadingFile = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'uploading...',\r\n            text: 'please wait',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n\r\n        activeNote.url = fileUrl;\r\n        dispatch( startSaveNote( activeNote ));\r\n        \r\n        Swal.close();\r\n    }\r\n} \r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n        Swal.fire('Deleted', 'Note', 'success');\r\n    }\r\n}\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload:id\r\n})\r\n\r\n\r\n","import { useState } from \"react\"\r\n\r\n// Recibe un objeto con las propiedades inputs\r\nexport const useForm = ( initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState( initialState )\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues( newFormState )\r\n    }\r\n    //Lee lo que se introduce en cada input\r\n    const handleInputChange = ( { target }) => {\r\n\r\n        //El name del input debe ser el mismo del atributo del objeto\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startDeleting, startSaveNote, starUploadingFile } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch(  starUploadingFile(file) ) \r\n        }\r\n\r\n    }\r\n    const handleSave = () => {\r\n        \r\n        dispatch( startSaveNote( active ) )\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( active.id ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2021</span>\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\" \r\n                style={{display:'none'}}\r\n                onChange={ handleFileChange }\r\n                name=\"file\"\r\n            />\r\n            <div>\r\n                <button className=\"btn\"\r\n                    onClick={ handlePictureUpload }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn \"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n                <button className=\"btn btn-danger\"\r\n                    onClick={ handleDelete }  \r\n                >\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {  useSelector } from 'react-redux'\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { active:note } = useSelector(state => state.notes);\r\n\r\n    const [ formValues, handleInputChange, reset ] = useForm ( note );\r\n\r\n    const { body, title, url } = formValues;\r\n    \r\n    const activeId = useRef( note.id );\r\n\r\n    \r\n    useEffect(() => {\r\n        if(  note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [ note, reset, url ])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ))\r\n\r\n    }, [ formValues, dispatch ])\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What's happening today\"\r\n                    className=\"notes__text-area\"\r\n                    autoComplete=\"off\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n\r\n                </textarea>\r\n\r\n                {   \r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={note.url}\r\n                            alt=\"landscape\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Selectet something\r\n                <br />\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"fa fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = ( err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = ( err) => ({\r\n    type: types.uiRemoveError,\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { finishLoading,  startLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from \"./notes\";\r\n\r\n\r\nexport const startLoginEmailPassword = ( email, password) => {\r\n\r\n\r\n    return (dispatch) => {\r\n        dispatch( startLoading() ); \r\n        \r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n\r\n                dispatch( login( user.uid, user.displayName) );\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( ({ message})  => {\r\n\r\n                Swal.fire('Error',message, 'error')\r\n                dispatch( finishLoading() );\r\n                \r\n                \r\n            })\r\n        \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password)\r\n            .then( async ({ user }) => {\r\n                \r\n                await user.updateProfile({ displayName: name });\r\n\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n            .catch( e  => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName)\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ( {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout() );\r\n        dispatch ( noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ( {\r\n    type: types.logout,\r\n    \r\n});","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ( {id, date, title, body, url} ) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const noteDate = moment(date);\r\n    \r\n    const handleEntryClick = () => {\r\n        \r\n        dispatch( \r\n            activeNote(id, {\r\n                title, body, date,url,\r\n            })\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"journal__entry animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize:'cover',\r\n                    backgroundImage:`url(${url})`\r\n                }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__date-box\">\r\n                <span>{ noteDate.format('dddd')}</span>\r\n                <h4>{ noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries \">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        { ...note }\r\n                    />\r\n                )) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { noteLogout, startNewNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n        \r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"/>\r\n                    <span> { name } </span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    new Entry\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                { \r\n                    ( active )\r\n                        ? <NoteScreen />\r\n                        :<NothingSelected /> }\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport {  removeError, setError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, msgError } = useSelector(state => state.ui)\r\n    \r\n    const [ formValues, handleInputChange] = useForm({\r\n        email:'r@gmail.com',\r\n        password:'123456'\r\n    });\r\n    \r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid() ) {\r\n              \r\n            dispatch( startLoginEmailPassword(email, password) );\r\n            \r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    \r\n    const isFormValid = () => {\r\n        \r\n       if ( !validator.isEmail(email) ) {\r\n\r\n            dispatch(setError('Email is not valid'));\r\n            setTimeout(() => {\r\n                dispatch(removeError());\r\n            }, 2000);\r\n            return false;\r\n\r\n        } else if ( password.length < 5) {\r\n\r\n            dispatch(setError('Passwors should be at least 6 characthers'));\r\n            setTimeout(() => {\r\n                dispatch(removeError());\r\n            }, 2000);\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3 className=\"auth__title\">Login </h3>\r\n            <form onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n            {\r\n               msgError &&\r\n                (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                    \r\n                )\r\n                \r\n            }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n        \r\n                <div className=\"auth__social-networs\">\r\n                    <p> Login with social networks</p>\r\n                    <div className=\"google-btn\" \r\n                    onClick={handleGoogleLogin}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new Account\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(state => state.ui)\r\n\r\n    const [ formValues, handleInputChange] = useForm({\r\n        name:'johan',\r\n        email:'r@gmail.com',\r\n        password:'123456',\r\n        password2:'123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n        } \r\n    }\r\n\r\n    const isFormValid = () => {\r\n        \r\n        if ( name.trim().length === 0 ) {\r\n\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n\r\n        } else if ( !validator.isEmail(email) ) {\r\n\r\n            console.log('Email is not valid');\r\n            dispatch(setError('Email is not valid'));\r\n\r\n            return false;\r\n\r\n        } else if ( password !== password2 || password.length < 5) {\r\n\r\n            dispatch(setError('Passwors should be at least 6 characthers'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        <h3 className=\"auth__title\">Register </h3>\r\n        <form onSubmit={handleRegister}\r\n            className=\"animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n\r\n           {\r\n               msgError &&\r\n                (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                    \r\n                )\r\n                \r\n            }\r\n\r\n            <input \r\n                type=\"name\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                className=\"auth__input\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                className=\"auth__input\"\r\n                autoComplete=\"off\"\r\n                value={email}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            <input \r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                className=\"auth__input\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            <input \r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"password2\"\r\n                className=\"auth__input\"\r\n                value={password2}\r\n                onChange={handleInputChange}\r\n                \r\n            />\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block mb-5\"\r\n\r\n            >\r\n                Register\r\n            </button>\r\n\r\n    \r\n\r\n            <Link to=\"/auth/login\"\r\n                className=\"link \"\r\n            >\r\n                Already registered?\r\n            </Link>\r\n\r\n        </form>\r\n\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={LoginScreen} />\r\n                    <Route exact path='/auth/register' component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PublicRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component { ...props }/>\r\n                    : <Redirect to=\"/\" />\r\n            )}\r\n        >\r\n            \r\n        </Route>\r\n    )\r\n}\r\n\r\nPublicRoute.protoTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest } \r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                    ? <Component { ...props }/>\r\n                    : <Redirect to=\"/auth\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.protoTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport {  startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [ checking, setChecking ] = useState(true);\r\n\r\n    const [ IsLoggedIn, setIsLoggedIn ] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n\r\n            if(user?.uid){\r\n                dispatch( login( user.uid, user.displayName ) )\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch( startLoadingNotes( user.uid ))\r\n\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking( false )\r\n        });\r\n        \r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n    if( checking ) {\r\n        return (\r\n            <h1> Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router> \r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path='/auth'\r\n                        component={AuthRouter}\r\n                        isAuthenticated={ IsLoggedIn }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact path='/'\r\n                        component={JournalScreen}\r\n                        isAuthenticated={ IsLoggedIn }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.uiSetError:         \r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:         \r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        \r\n        case types.uiStartLoading :         \r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading :         \r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} ","import { types } from \"../types/types\";\r\n\r\n/* \r\n    {\r\n        notes: [],\r\n        active: null || {\r\n            id:''\r\n            title: ''\r\n            body:''\r\n            imageUrl''\r\n            date:''\r\n        }\r\n    }\r\n*/\r\nconst initialStatel = {\r\n    notes: [],\r\n    active: null\r\n}\r\nexport const notesReducer = ( state = initialStatel, action) => {\r\n    switch ( action.type ) {\r\n        case types.notesActive:\r\n            \r\n            return  {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n        \r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            \r\n                return  {\r\n                    ...state,\r\n                    notes: [...action.payload]\r\n                };\r\n\r\n        case types.notesUpdated:\r\n            \r\n                return  {\r\n                    ...state,\r\n                    notes: state.notes.map(\r\n                        note => note.id === action.payload.id \r\n                            ? action.payload.note\r\n                            : note\r\n                    )\r\n                };\r\n        case types.notesDelete:\r\n\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            } \r\n        \r\n        case types.notesLogoutCleaning: \r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n} ","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n \r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui : uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    ) \r\n)\r\n","import { types } from \"../types/types\";\r\n/* \r\n    {\r\n        uid: id de usuario,\r\n        name: ....\r\n    }\r\n\r\n*/\r\n\r\nexport const authReducer = ( state = {}, action ) =>{\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            \r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout: \r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routes/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>     \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport  './styles/styles.scss'\n\nReactDOM.render(\n    <JournalApp/>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}